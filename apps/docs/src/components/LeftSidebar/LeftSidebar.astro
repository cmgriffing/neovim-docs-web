---
import { getLanguageFromURL } from "../../languages";
import { SIDEBAR } from "../../config";

type Props = {
  currentPage: string;
};

const { currentPage } = Astro.props as Props;
const currentPageMatch = currentPage.endsWith("/")
  ? currentPage.slice(1, -1)
  : currentPage.slice(1);
const langCode = getLanguageFromURL(currentPage);
const sidebar = SIDEBAR[langCode];
---

<nav aria-labelledby="grid-left">
  <ul class="nav-groups">
    {
      Object.entries(sidebar).map(([header, children]) => (
        <li>
          <div class="nav-group">
            <details>
              <summary>
                <h3 class="left-sidebar-section-header">{header}</h3>
              </summary>
              <ul>
                {children?.map((child) => {
                  const url =
                    "/neovim-docs-web/en" + Astro.site?.pathname + child.link;
                  return (
                    <li class="nav-link">
                      <a
                        href={url}
                        aria-current={
                          currentPageMatch === child.link ? "page" : false
                        }
                      >
                        {child.text}
                      </a>
                    </li>
                  );
                })}
              </ul>
            </details>
          </div>
        </li>
      ))
    }
  </ul>
</nav>

<script is:inline>
  window.addEventListener("DOMContentLoaded", () => {
    var target = document.querySelector('[aria-current="page"]');
    if (target && target.offsetTop > window.innerHeight - 100) {
      document.querySelector(".nav-groups").scrollTop = target.offsetTop;
    }
  });
</script>

<style>
  nav {
    width: 100%;
    margin-right: 1rem;
  }

  .nav-groups {
    height: 100%;
    padding: 2rem 0;
    overflow-x: visible;
    overflow-y: auto;
    max-height: 100vh;
  }

  .nav-groups > li + li {
    margin-top: 0.5rem;
  }

  .nav-groups > :first-child {
    padding-top: var(--doc-padding);
  }

  .nav-groups > :last-child {
    padding-bottom: 2rem;
    margin-bottom: var(--theme-navbar-height);
  }

  .nav-group {
    margin-bottom: 1rem;
  }

  .nav-group-title {
    font-size: 1rem;
    font-weight: 700;
    padding: 0.1rem 1rem;
    text-transform: uppercase;
    margin-bottom: 0.5rem;
  }

  .nav-link a {
    font-size: 1rem;
    margin: 1px;
    padding: 0.3rem 2.5rem;
    font: inherit;
    color: inherit;
    text-decoration: none;
    display: block;
  }

  .nav-link a:hover,
  .nav-link a:focus {
    background-color: var(--theme-bg-hover);
  }

  .nav-link a[aria-current="page"] {
    color: var(--theme-text-accent);
    background-color: var(--theme-bg-accent);
    font-weight: 600;
  }

  summary {
    display: flex;
    flex-direction: row;
    position: relative;
    padding-left: 24px;
    cursor: pointer;
  }

  summary::before {
    content: url('data:image/svg+xml,%3Csvg xmlns="http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 256"%3E%3Cpath fill="var(--fg-color)" d="m181.7 133.7l-80 80A8.3 8.3 0 0 1 96 216a8.5 8.5 0 0 1-3.1-.6A8 8 0 0 1 88 208V48a8 8 0 0 1 4.9-7.4a8.4 8.4 0 0 1 8.8 1.7l80 80a8.1 8.1 0 0 1 0 11.4Z"%2F%3E%3C%2Fsvg%3E');
    position: absolute;
    height: 20px;
    width: 20px;
    top: 0px;
    left: 0px;
  }

  details[open] summary::before {
    content: url('data:image/svg+xml,%3Csvg xmlns="http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 256"%3E%3Cpath fill="var(--fg-color)" d="m213.7 101.7l-80 80a8.2 8.2 0 0 1-11.4 0l-80-80a8.4 8.4 0 0 1-1.7-8.8A8 8 0 0 1 48 88h160a8 8 0 0 1 7.4 4.9a8.4 8.4 0 0 1-1.7 8.8Z"%2F%3E%3C%2Fsvg%3E');
  }

  .left-sidebar-section-header {
    display: inline-flex;
    font-size: 1.25rem;
    font-weight: 500;
    margin-bottom: 0.25rem;
  }

  @media (min-width: 50em) {
    .nav-groups {
      padding: 0;
    }
  }
</style>

<style is:global>
  :root.theme-dark .nav-link a[aria-current="page"] {
    color: hsla(var(--color-base-white), 100%, 1);
  }

  .theme-dark summary::before {
    filter: invert(1);
  }
</style>

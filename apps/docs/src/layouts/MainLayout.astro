---
import HeadCommon from "../components/HeadCommon.astro";
import HeadSEO from "../components/HeadSEO.astro";
import Header from "../components/Header/Header.astro";
import PageContent from "../components/PageContent/PageContent.astro";
import LeftSidebar from "../components/LeftSidebar/LeftSidebar.astro";
import RightSidebar from "../components/RightSidebar/RightSidebar.astro";
import * as CONFIG from "../config";
import type { MarkdownHeading } from "astro";
import Footer from "../components/Footer/Footer.astro";
import { JSDOM } from "jsdom";
import Case from "case";

type Props = {
  frontmatter: CONFIG.Frontmatter;
  headings: MarkdownHeading[];
  compiledContent: () => string;
};

const { frontmatter, compiledContent } = Astro.props as Props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const currentPage = Astro.url.pathname;
const currentFile = `src/pages${currentPage.replace(/\/$/, "")}.md`;
const githubEditUrl = `${CONFIG.GITHUB_EDIT_URL}/${currentFile}`;

const dom = new JSDOM(compiledContent());

const headings = Array.from(dom.window.document.querySelectorAll("h2,h3")).map(
  (heading) => {
    console.log(heading.tagName);
    const depth = heading.tagName === "H2" ? 2 : 3;

    const id = heading.querySelector("a")?.getAttribute("name") || "";

    return {
      depth,
      text: heading.textContent || "",
      id,
      slug: Case.kebab(heading.textContent || ""),
    };
  }
);

// console.log({ headings });
---

<html
  dir={frontmatter.dir ?? "ltr"}
  lang={frontmatter.lang ?? "en-us"}
  class="initial"
>
  <head>
    <HeadCommon />
    <HeadSEO frontmatter={frontmatter} canonicalUrl={canonicalURL} />
    <title>
      {
        frontmatter.title
          ? `${frontmatter.title} ðŸš€ ${CONFIG.SITE.title}`
          : CONFIG.SITE.title
      }
    </title>
    <style>
      body {
        width: 100%;
        display: grid;
        grid-template-rows: var(--theme-navbar-height) 1fr;
        --gutter: 0.5rem;
        --doc-padding: 2rem;
      }

      .layout {
        display: grid;
        grid-auto-flow: column;
        grid-template-columns:
          minmax(var(--gutter), 1fr) minmax(0, var(--max-width))
          minmax(var(--gutter), 1fr);
        overflow-x: hidden;
      }

      .grid-sidebar {
        height: 100vh;
        position: sticky;
        top: 0;
        padding: 0;
      }

      #grid-left {
        position: fixed;
        background-color: var(--theme-bg);
        z-index: 10;
        display: none;
      }

      #grid-main {
        padding: var(--doc-padding) var(--gutter);
        grid-column: 2;
        display: flex;
        flex-direction: column;
        height: 100%;
      }

      #grid-right {
        display: none;
      }

      @media (min-width: 50em) {
        .layout {
          overflow: initial;
          grid-template-columns: 20rem minmax(0, var(--max-width));
          gap: 1em;
        }

        #grid-left {
          display: flex;
          padding-left: 2rem;
          position: sticky;
          grid-column: 1;
        }
      }

      @media (min-width: 72em) {
        .layout {
          grid-template-columns: 20rem minmax(0, var(--max-width)) 18rem;
          padding-left: 0;
          padding-right: 0;
          margin: 0 auto;
        }

        #grid-right {
          grid-column: 3;
          display: flex;
        }
      }
    </style>
    <style is:global>
      .layout > * {
        width: 100%;
        height: 100%;
      }

      .mobile-sidebar-toggle {
        overflow: hidden;
      }

      .mobile-sidebar-toggle #grid-left {
        display: block;
        top: 2rem;
      }

      .section-title {
        color: black;
        text-decoration: none;
        position: relative;
      }

      .theme-dark .section-title {
        color: white;
      }

      .section-title:hover {
        color: var(--theme-text-accent);
        text-decoration: none;
      }

      .section-title:hover::before {
        position: absolute;
        height: 20px;
        width: 20px;
        left: -24px;
        top: 16px;

        content: " ";

        background-size: contain;
        background-image: url('data:image/svg+xml,%3Csvg xmlns="http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 64 64"%3E%3Cpath fill="currentColor" d="m32.057 40.697l-12.96 12.96c-.989.988-2.714.886-3.831-.232l-4.69-4.691c-1.119-1.117-1.222-2.842-.233-3.831l12.961-12.96c.99-.991.884-2.715-.232-3.832c-1.117-1.118-2.84-1.222-3.831-.231L2.68 44.438c-.989.989-.887 2.713.232 3.831l12.819 12.819c1.114 1.117 2.842 1.221 3.83.232l16.561-16.56c.99-.99.884-2.715-.233-3.831s-2.842-1.223-3.832-.232M61.09 15.73L48.271 2.911c-1.118-1.118-2.842-1.221-3.832-.232L27.88 19.238c-.99.99-.886 2.715.231 3.832c1.116 1.116 2.843 1.221 3.832.233l12.958-12.96c.992-.991 2.716-.885 3.833.232l4.69 4.691c1.117 1.118 1.222 2.841.231 3.832l-12.959 12.96c-.99.989-.884 2.715.232 3.833c1.117 1.116 2.842 1.221 3.833.231l16.558-16.56c.993-.989.886-2.716-.229-3.832"%2F%3E%3Cpath fill="currentColor" d="M20.302 43.7c1.116 1.118 2.84 1.22 3.828.231L43.932 24.13c.99-.99.888-2.711-.231-3.83c-1.116-1.118-2.84-1.223-3.832-.231l-19.8 19.8c-.991.989-.886 2.714.233 3.831"%2F%3E%3C%2Fsvg%3E');
      }

      h3 .section-title:hover::before {
        top: 8px;
      }
    </style>
  </head>

  <body>
    <Header currentPage={currentPage} />
    <main class="layout">
      <aside id="grid-left" class="grid-sidebar" title="Site Navigation">
        <LeftSidebar currentPage={currentPage} />
      </aside>
      <div id="grid-main">
        <PageContent
          frontmatter={frontmatter}
          headings={headings}
          githubEditUrl={githubEditUrl}
        >
          <slot />
        </PageContent>
      </div>
      <aside id="grid-right" class="grid-sidebar" title="Table of Contents">
        <RightSidebar headings={headings} githubEditUrl={githubEditUrl} />
      </aside>
    </main>
    <Footer path={currentFile} />
    <script is:inline>
      // document.querySelector()
    </script>
  </body>
</html>
